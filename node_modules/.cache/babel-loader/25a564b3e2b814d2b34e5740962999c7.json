{"ast":null,"code":"import _classCallCheck from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import List from\"./List/List\";var TestingSearch=/*#__PURE__*/function(_Component){_inherits(TestingSearch,_Component);function TestingSearch(props){var _this;_classCallCheck(this,TestingSearch);_this=_possibleConstructorReturn(this,_getPrototypeOf(TestingSearch).call(this,props));_this.state={list:[\"go to the market\",\"jksrvhfkr\",\"hkrfvkrwe\"]};_this.addItem=_this.addItem.bind(_assertThisInitialized(_this));_this.removeItem=_this.removeItem.bind(_assertThisInitialized(_this));return _this;}_createClass(TestingSearch,[{key:\"removeItem\",value:function removeItem(item){// Put our list into an array\nvar list=this.state.list.slice();// Check to see if item passed in matches item in array\nlist.some(function(el,i){if(el===item){// If item matches, remove it from array\nlist.splice(i,1);return true;}});// Set state to list\nthis.setState({list:list});this.handleChange=this.handleChange.bind(this);}},{key:\"addItem\",value:function addItem(e){// Prevent button click from submitting form\ne.preventDefault();// Create variables for our list, the item to add, and our form\nvar list=this.state.list;var newItem=document.getElementById(\"addInput\");var form=document.getElementById(\"addItemForm\");// If our input has a value\nif(newItem.value!=\"\"){// Add the new item to the end of our list array\nlist.push(newItem.value);// Then we use that to set the state for list\nthis.setState({list:list});// Finally, we need to reset the form\nnewItem.classList.remove(\"is-danger\");form.reset();}else{// If the input doesn't have a value, make the border red since it's required\nnewItem.classList.add(\"is-danger\");}}},{key:\"handleChange\",value:function handleChange(e){// Variable to hold the original version of the list\nvar currentList=[];// Variable to hold the filtered list before putting into state\nvar newList=[];// If the search bar isn't empty\nif(e.target.value!==\"\"){// Assign the original list to currentList\ncurrentList=this.props.items;// Use .filter() to determine which items should be displayed\n// based on the search terms\nnewList=currentList.filter(function(item){// change current item to lowercase\nvar lc=item.toLowerCase();// change search term to lowercase\nvar filter=e.target.value.toLowerCase();// check to see if the current list item includes the search term\n// If it does, it will be added to newList. Using lowercase eliminates\n// issues with capitalization in search terms and search content\nreturn lc.includes(filter);});}else{// If the search bar is empty, set newList to original task list\nnewList=this.props.items;}// Set the filtered state based on what our rules added to newList\nthis.setState({filtered:newList});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"\"},React.createElement(\"div\",{className:\"container\"},React.createElement(\"section\",{className:\"section\"},React.createElement(List,{items:this.state.list,delete:this.removeItem})),React.createElement(\"hr\",null),React.createElement(\"section\",{className:\"section\"},React.createElement(\"form\",{className:\"form\",id:\"addItemForm\"},React.createElement(\"input\",{type:\"text\",className:\"input\",id:\"addInput\"// placeholder=\"Something that needs ot be done...\"\n,onChange:this.handleChange,placeholder:\"New Content...\"}),React.createElement(\"button\",{className:\"btn btn-primary btn-sm\",onClick:this.addItem},\"Add Item\")))));}}]);return TestingSearch;}(Component);export default TestingSearch;","map":{"version":3,"sources":["/Users/thezucks/netcraft/test-excel/src/Testing-search/Testing-search.js"],"names":["React","Component","List","TestingSearch","props","state","list","addItem","bind","removeItem","item","slice","some","el","i","splice","setState","handleChange","e","preventDefault","newItem","document","getElementById","form","value","push","classList","remove","reset","add","currentList","newList","target","items","filter","lc","toLowerCase","includes","filtered"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport List from \"./List/List\";\n\nclass TestingSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            list :[ \"go to the market\", \"jksrvhfkr\",\"hkrfvkrwe\" ]\n        }\n        this.addItem = this.addItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n\n\n    }\n    removeItem(item) {\n        // Put our list into an array\n        const list = this.state.list.slice();\n        // Check to see if item passed in matches item in array\n        list.some((el, i) => {\n            if (el === item) {\n                // If item matches, remove it from array\n                list.splice(i, 1);\n                return true;\n            }\n        });\n        // Set state to list\n        this.setState({\n            list: list\n        });\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n    addItem(e) {\n        // Prevent button click from submitting form\n        e.preventDefault();\n\n        // Create variables for our list, the item to add, and our form\n        let list = this.state.list;\n        const newItem = document.getElementById(\"addInput\");\n        const form = document.getElementById(\"addItemForm\");\n\n        // If our input has a value\n        if (newItem.value != \"\") {\n            // Add the new item to the end of our list array\n            list.push(newItem.value);\n            // Then we use that to set the state for list\n            this.setState({\n                list: list\n            });\n            // Finally, we need to reset the form\n            newItem.classList.remove(\"is-danger\");\n            form.reset();\n        } else {\n            // If the input doesn't have a value, make the border red since it's required\n            newItem.classList.add(\"is-danger\");\n        }\n    }\n    handleChange(e) {\n        // Variable to hold the original version of the list\n        let currentList = [];\n        // Variable to hold the filtered list before putting into state\n        let newList = [];\n\n        // If the search bar isn't empty\n        if (e.target.value !== \"\") {\n            // Assign the original list to currentList\n            currentList = this.props.items;\n\n            // Use .filter() to determine which items should be displayed\n            // based on the search terms\n            newList = currentList.filter(item => {\n                // change current item to lowercase\n                const lc = item.toLowerCase();\n                // change search term to lowercase\n                const filter = e.target.value.toLowerCase();\n                // check to see if the current list item includes the search term\n                // If it does, it will be added to newList. Using lowercase eliminates\n                // issues with capitalization in search terms and search content\n                return lc.includes(filter);\n            });\n        } else {\n            // If the search bar is empty, set newList to original task list\n            newList = this.props.items;\n        }\n        // Set the filtered state based on what our rules added to newList\n        this.setState({\n            filtered: newList\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n                <div className=\"container\">\n                    <section className=\"section\">\n                        <List items={this.state.list} delete={this.removeItem}\n                        />\n                    </section>\n                    <hr />\n                    <section className=\"section\">\n                        <form className=\"form\" id=\"addItemForm\">\n                            <input\n                                type=\"text\"\n                                className=\"input\"\n                                id=\"addInput\"\n                                // placeholder=\"Something that needs ot be done...\"\n                                onChange={this.handleChange} placeholder=\"New Content...\"\n                            />\n                            <button className=\"btn btn-primary btn-sm\" onClick={this.addItem}>\n                                Add Item\n                            </button>\n                        </form>\n                    </section>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default TestingSearch;"]},"metadata":{},"sourceType":"module"}