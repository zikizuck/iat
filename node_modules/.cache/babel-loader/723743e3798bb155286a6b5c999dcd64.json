{"ast":null,"code":"var _jsxFileName = \"/Users/thezucks/netcraft/test-excel/src/Testing-search/List/List.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filtered: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.items\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      filtered: nextProps.items\n    });\n  }\n\n  handleChange(e) {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (e.target.value !== \"\") {\n      // Assign the original list to currentList\n      currentList = this.props.items; // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      newList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = this.props.items;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      onChange: this.handleChange,\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.filtered.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), item, \" \\xA0\", React.createElement(\"span\", {\n      className: \"\",\n      onClick: () => this.props.delete(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \" Delete\"))))));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/thezucks/netcraft/test-excel/src/Testing-search/List/List.js"],"names":["React","Component","FontAwesomeIcon","faHeart","faTimes","List","constructor","props","state","filtered","handleChange","bind","componentDidMount","setState","items","componentWillReceiveProps","nextProps","e","currentList","newList","target","value","filter","item","lc","toLowerCase","includes","render","map","delete"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,mCAAjC;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWO;AADX,KAAd;AAGH;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,SAAKH,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAEO,SAAS,CAACF;AADV,KAAd;AAGH;;AAEDJ,EAAAA,YAAY,CAACO,CAAD,EAAI;AACZ;AACA,QAAIC,WAAW,GAAG,EAAlB,CAFY,CAGZ;;AACA,QAAIC,OAAO,GAAG,EAAd,CAJY,CAMZ;;AACA,QAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AACvB;AACAH,MAAAA,WAAW,GAAG,KAAKX,KAAL,CAAWO,KAAzB,CAFuB,CAIvB;AACA;;AACAK,MAAAA,OAAO,GAAGD,WAAW,CAACI,MAAZ,CAAmBC,IAAI,IAAI;AACjC;AACA,cAAMC,EAAE,GAAGD,IAAI,CAACE,WAAL,EAAX,CAFiC,CAGjC;;AACA,cAAMH,MAAM,GAAGL,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeI,WAAf,EAAf,CAJiC,CAKjC;AACA;AACA;;AACA,eAAOD,EAAE,CAACE,QAAH,CAAYJ,MAAZ,CAAP;AACH,OATS,CAAV;AAUH,KAhBD,MAgBO;AACH;AACAH,MAAAA,OAAO,GAAG,KAAKZ,KAAL,CAAWO,KAArB;AACH,KA1BW,CA2BZ;;;AACA,SAAKD,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAEU;AADA,KAAd;AAGH;;AAKDQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,QAAQ,EAAE,KAAKjB,YAApD;AAAkE,MAAA,WAAW,EAAC,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWC,QAAX,CAAoBmB,GAApB,CAAwBL,IAAI,IACzB;AAAI,MAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEpB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,EACKoB,IADL,WAEI;AACI,MAAA,SAAS,EAAC,EADd;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKhB,KAAL,CAAWsB,MAAX,CAAkBN,IAAlB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEnB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,YAHD,CAFJ,CADH,CADL,CAFJ,CADJ;AAiBH;;AA3EwB;;AA8E7B,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filtered: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            filtered: this.props.items\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            filtered: nextProps.items\n        });\n    }\n\n    handleChange(e) {\n        // Variable to hold the original version of the list\n        let currentList = [];\n        // Variable to hold the filtered list before putting into state\n        let newList = [];\n\n        // If the search bar isn't empty\n        if (e.target.value !== \"\") {\n            // Assign the original list to currentList\n            currentList = this.props.items;\n\n            // Use .filter() to determine which items should be displayed\n            // based on the search terms\n            newList = currentList.filter(item => {\n                // change current item to lowercase\n                const lc = item.toLowerCase();\n                // change search term to lowercase\n                const filter = e.target.value.toLowerCase();\n                // check to see if the current list item includes the search term\n                // If it does, it will be added to newList. Using lowercase eliminates\n                // issues with capitalization in search terms and search content\n                return lc.includes(filter);\n            });\n        } else {\n            // If the search bar is empty, set newList to original task list\n            newList = this.props.items;\n        }\n        // Set the filtered state based on what our rules added to newList\n        this.setState({\n            filtered: newList\n        });\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n                <input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Search...\" />\n                <ul>\n                    {this.state.filtered.map(item => (\n                        <li key={item}><FontAwesomeIcon icon={faHeart} />\n                            {item} &nbsp;\n                            <span\n                                className=\"\"\n                                onClick={() => this.props.delete(item)}\n                            ><button><FontAwesomeIcon icon={faTimes} /> Delete</button></span>\n                        </li>\n                    ))}\n                </ul>\n\n            </div>\n        );\n    }\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}