{"ast":null,"code":"import _classCallCheck from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/thezucks/netcraft/test-excel/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Button}from'react-bootstrap';import{Formik,Form,Field,ErrorMessage}from'formik';import postModel from'../models/post.model';import'./CreatePost.scss';import{faCloudUploadAlt,faShare}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import TagsInput from'react-tagsinput';var CreatePost=/*#__PURE__*/function(_Component){_inherits(CreatePost,_Component);function CreatePost(props){var _this;_classCallCheck(this,CreatePost);_this=_possibleConstructorReturn(this,_getPrototypeOf(CreatePost).call(this,props));_this.state={tags:[]};return _this;}_createClass(CreatePost,[{key:\"handleTagsChange\",value:function handleTagsChange(tags){this.setState({tags:tags});}},{key:\"convertToFormData\",value:function convertToFormData(values){var data=new FormData();var _loop=function _loop(key){Array.isArray(values[key])?values[key].forEach(function(value){return data.append(key+'[]',value);}):data.append(key,values[key]);};for(var key in values){_loop(key);}return data;}},{key:\"submit\",value:function submit(values){var formData=this.convertToFormData(values);fetch('./db.json',{method:'POST',body:formData}).then(function(res){return res.json();}).then(function(post){return console.log(post);}).catch(function(err){return console.log(err);});}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"CreatePost\"},React.createElement(\"h2\",null,\"Create Post\"),React.createElement(Formik,{initialValues:{image:'',title:'',tags:[]},validationSchema:postModel,onSubmit:this.submit.bind(this),render:function render(_ref){var setFieldValue=_ref.setFieldValue;return React.createElement(Form,{className:\"col-xs-12 col-md-6\"},React.createElement(\"div\",{className:\"row form-group\"},React.createElement(\"input\",{type:\"file\",name:\"image\",id:\"image\",onChange:function onChange(event){setFieldValue('image',event.currentTarget.files[0]);}}),React.createElement(\"label\",{htmlFor:\"image\",className:\"upload-button\"},React.createElement(\"span\",null,React.createElement(FontAwesomeIcon,{icon:faCloudUploadAlt}),\"Select an image\")),React.createElement(\"div\",{className:\"container-fluid row\"},React.createElement(ErrorMessage,{className:\"alert alert-danger mt-2\",name:\"image\",component:\"div\"}))),React.createElement(\"div\",{className:\"row form-group\"},React.createElement(\"label\",null,\"Title:\"),React.createElement(Field,{as:\"textarea\",name:\"title\",className:\"form-control\"}),React.createElement(ErrorMessage,{className:\"alert alert-danger mt-2\",name:\"title\",component:\"div\"})),React.createElement(\"div\",{className:\"row form-group\"},React.createElement(\"label\",null,\"Tags:\"),React.createElement(TagsInput,{value:_this2.state.tags,onChange:function onChange(tags){_this2.handleTagsChange(tags);setFieldValue('tags',tags);},className:\"tags-wrapper\"}),React.createElement(ErrorMessage,{className:\"alert alert-danger mt-2\",name:\"tags\",component:\"div\"}),React.createElement(\"div\",null,React.createElement(\"sub\",null,\"Press Enter after inserting a tag\"))),React.createElement(\"div\",{className:\"row form-group d-flex justify-content-end\"},React.createElement(Button,{type:\"submit\"},React.createElement(FontAwesomeIcon,{icon:faShare}),\"\\xA0 Share\")));}}));}}]);return CreatePost;}(Component);export default CreatePost;","map":{"version":3,"sources":["/Users/thezucks/netcraft/test-excel/src/CreatePost/CreatePost.js"],"names":["React","Component","Button","Formik","Form","Field","ErrorMessage","postModel","faCloudUploadAlt","faShare","FontAwesomeIcon","TagsInput","CreatePost","props","state","tags","setState","values","data","FormData","key","Array","isArray","forEach","value","append","formData","convertToFormData","fetch","method","body","then","res","json","post","console","log","catch","err","image","title","submit","bind","setFieldValue","event","currentTarget","files","handleTagsChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport postModel from '../models/post.model';\nimport './CreatePost.scss';\nimport { faCloudUploadAlt, faShare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TagsInput from 'react-tagsinput';\n\nclass CreatePost extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttags: []\n\t\t};\n\t}\n\n\thandleTagsChange(tags) {\n\t\tthis.setState({\n\t\t\ttags: tags\n\t\t});\n\t}\n\n\tconvertToFormData(values) {\n\t\tconst data = new FormData();\n\t\tfor (let key in values) {\n\t\t\tArray.isArray(values[key])\n\t\t\t\t? values[key].forEach(value => data.append(key + '[]', value))\n\t\t\t\t: data.append(key, values[key]) ;\n\t\t}\n\t\treturn data;\n\t}\n\n\tsubmit(values) {\n\t\tconst formData = this.convertToFormData(values);\n\t\tfetch('./db.json', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData\n\t\t}).then(res => res.json())\n\t\t\t.then(post => console.log(post))\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"CreatePost\">\n\t\t\t\t<h2>Create Post</h2>\n\t\t\t\t<Formik initialValues={{image: '', title: '', tags: []}}\n\t\t\t\t        validationSchema={postModel}\n\t\t\t\t        onSubmit={this.submit.bind(this)}\n\t\t\t\t\t\trender={({setFieldValue}) => {\n\t\t\t\t\t\t\treturn <Form className=\"col-xs-12 col-md-6\">\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"image\" id=\"image\" onChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('image', event.currentTarget.files[0]);\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"image\" className=\"upload-button\">\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCloudUploadAlt} />\n\t\t\t\t\t\t\t\t\t\t\tSelect an image\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"container-fluid row\">\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"image\" component=\"div\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<label>Title:</label>\n\n\n\t\t\t\t\t\t\t\t\t<Field as=\"textarea\" name=\"title\" className=\"form-control\" />\n\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"title\" component=\"div\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<label>Tags:</label>\n\t\t\t\t\t\t\t\t\t<TagsInput value={this.state.tags}\n\t\t\t\t\t\t\t\t\t           onChange={(tags) => {\n\t\t\t\t\t\t\t\t\t               this.handleTagsChange(tags);\n\t\t\t\t\t\t\t\t\t\t           setFieldValue('tags', tags);\n\t\t\t\t\t\t\t\t\t           }}\n\t\t\t\t\t\t\t\t\t           className=\"tags-wrapper\" />\n\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"tags\" component=\"div\" />\n\t\t\t\t\t\t\t\t\t<div><sub>Press Enter after inserting a tag</sub></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group d-flex justify-content-end\">\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faShare} />&nbsp;\n\t\t\t\t\t\t\t\t\t\tShare\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Form>;\n\t\t\t\t\t\t}}>\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}